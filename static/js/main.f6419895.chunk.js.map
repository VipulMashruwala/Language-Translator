{"version":3,"sources":["components/Navbar.js","components/Main.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","Main","props","getText","event","setState","left_text","target","value","convertTextHandler","e","axios","require","default","options","method","url","params","source","input","state","headers","request","then","response","right_text","data","outputs","output","catch","error","console","preventDefault","bind","onChange","this","placeholder","onClick","Component","Footer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAcgBA,MAVhB,WACI,OACI,qBAAKC,UAAU,SAAf,SACG,qBAAKA,UAAU,UAAf,SACI,qBAAIA,UAAU,OAAd,iCAAyC,mBAAGA,UAAU,WAAb,kC,uCC2DzCC,G,wDA/DX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAWVC,QAAU,SAACC,GACP,EAAKC,SAAS,CACVC,UAAWF,EAAMG,OAAOC,SAdb,EAkBnBC,mBAAqB,SAACC,GAClB,IAAIC,EAAQC,EAAQ,IAASC,QAEzBC,EAAU,CACVC,OAAQ,MACRC,IAAK,wGACLC,OAAQ,CAAEC,OAAQ,KAAMX,OAAQ,KAAMY,MAAO,EAAKC,MAAMd,WACxDe,QAAS,CACL,iBAAkB,qDAClB,kBAAmB,uEAI3BV,EAAMW,QAAQR,GACbS,MAAK,SAAAC,GACF,EAAKnB,SAAS,CACVoB,WAAYD,EAASE,KAAKC,QAAQ,GAAGC,YAG1CC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,MAGlBpB,EAAEsB,kBAtCF,EAAKZ,MAAQ,CACTK,WAAY,sBACZnB,UAAW,IAGf,EAAKG,mBAAqB,EAAKA,mBAAmBwB,KAAxB,gBARX,E,0CA2CnB,WACI,OACI,sBAAKjC,UAAU,QAAf,UACI,qBAAKA,UAAU,YAAf,SACI,iCACI,qBAAKA,UAAU,oBAAf,SACI,0BAAUA,UAAU,YAAYkC,SAAUC,KAAKhC,QAASiC,YAAY,yBAExE,qBAAKpC,UAAU,cAAf,SACI,wBAAQA,UAAU,MAAMqC,QAASF,KAAK1B,mBAAtC,4BAIZ,qBAAKT,UAAU,aAAf,SACI,oBAAIA,UAAU,aAAd,SAA4BmC,KAAKf,MAAMK,sB,GA1DxCa,c,MCQHC,MARhB,WACI,OACI,wBAAQvC,UAAU,SAAlB,SACG,mBAAGA,UAAU,iBAAb,oDCQIwC,MAVf,WACE,OACA,gCACE,cAAC,EAAD,IACC,cAAC,EAAD,IACF,cAAC,EAAD,QCGYC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f6419895.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Navbar.css'\r\n\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <nav className=\"navbar\">\r\n           <div className=\"heading\">\r\n               <h1 className=\"head\">Language Translator <p className=\"en-to-hi\">( EN to HI )</p></h1>\r\n           </div>  \r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default  Navbar;","import React, { Component } from 'react'\r\nimport './Main.css'\r\n\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            right_text: \"Text Appear Here...\",\r\n            left_text: \"\"\r\n        };\r\n        \r\n        this.convertTextHandler = this.convertTextHandler.bind(this);\r\n\r\n    }\r\n\r\n    getText = (event) => {\r\n        this.setState({\r\n            left_text: event.target.value\r\n        })\r\n    }\r\n\r\n    convertTextHandler = (e) => {\r\n        var axios = require(\"axios\").default;\r\n\r\n        var options = {\r\n            method: 'GET',\r\n            url: 'https://systran-systran-platform-for-language-processing-v1.p.rapidapi.com/translation/text/translate',\r\n            params: { source: 'en', target: 'hi', input: this.state.left_text },\r\n            headers: {\r\n                'x-rapidapi-key': 'a3ccfdf31amshf245e61a3b29682p156972jsnc59ad2a3411e',\r\n                'x-rapidapi-host': 'systran-systran-platform-for-language-processing-v1.p.rapidapi.com'\r\n            }\r\n        };\r\n\r\n        axios.request(options)\r\n        .then(response => {\r\n            this.setState({\r\n                right_text: response.data.outputs[0].output\r\n            })\r\n            \r\n        }).catch(error=>{\r\n            console.error(error);\r\n        });\r\n        \r\n        e.preventDefault();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"outer\">\r\n                <div className=\"left-side\">\r\n                    <form>\r\n                        <div className=\"text-area-content\">\r\n                            <textarea className=\"text-area\" onChange={this.getText} placeholder=\"Enter Your Text...\"></textarea>\r\n                        </div>\r\n                        <div className=\"btn-content\">\r\n                            <button className=\"btn\" onClick={this.convertTextHandler}>Convert</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div className=\"right-side\">\r\n                    <h3 className=\"right-text\">{this.state.right_text}</h3>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Main","import React from 'react'\r\nimport './Footer.css'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer\"> \r\n           <p className=\"footer-content\">Copy Right &copy; By Vipul Mashruwala</p>\r\n        </footer>\r\n\r\n    )\r\n}\r\nexport default  Footer;","import Navbar from './components/Navbar';\nimport Main from './components/Main';\nimport Footer from './components/Footer';\n\nfunction App() {\n  return (\n  <div>\n    <Navbar />\n     <Main />\n   <Footer />\n  </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}